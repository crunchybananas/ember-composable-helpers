{"version":3,"file":"next.js","sources":["../../src/helpers/next.js"],"sourcesContent":["import { helper } from '@ember/component/helper';\nimport getIndex from '../utils/get-index';\nimport { isEmpty } from '@ember/utils';\nimport { A as emberArray } from '@ember/array';\nimport getValueArrayAndUseDeepEqualFromParams from '../-private/get-value-array-and-use-deep-equal-from-params';\nimport asArray from '../utils/as-array';\n\nexport function next(currentValue, maybeArray, useDeepEqual = false) {\n  let array = asArray(maybeArray);\n  let currentIndex = getIndex(array, currentValue, useDeepEqual);\n  let lastIndex = array.length - 1;\n\n  if (isEmpty(currentIndex)) {\n    return;\n  }\n\n  return currentIndex === lastIndex ? currentValue : emberArray(array).objectAt(currentIndex + 1);\n}\n\nexport default helper(function(params) {\n  let { currentValue, array, useDeepEqual } = getValueArrayAndUseDeepEqualFromParams(params);\n\n  return next(currentValue, array, useDeepEqual);\n});\n"],"names":["next","currentValue","maybeArray","useDeepEqual","array","asArray","currentIndex","getIndex","lastIndex","length","isEmpty","emberArray","objectAt","helper","params","getValueArrayAndUseDeepEqualFromParams"],"mappings":";;;;;;;AAOO,SAASA,IAAIA,CAACC,YAAY,EAAEC,UAAU,EAAEC,YAAY,GAAG,KAAK,EAAE;AACnE,EAAA,IAAIC,KAAK,GAAGC,OAAO,CAACH,UAAU,CAAC,CAAA;EAC/B,IAAII,YAAY,GAAGC,QAAQ,CAACH,KAAK,EAAEH,YAAY,EAAEE,YAAY,CAAC,CAAA;AAC9D,EAAA,IAAIK,SAAS,GAAGJ,KAAK,CAACK,MAAM,GAAG,CAAC,CAAA;AAEhC,EAAA,IAAIC,OAAO,CAACJ,YAAY,CAAC,EAAE;AACzB,IAAA,OAAA;AACF,GAAA;AAEA,EAAA,OAAOA,YAAY,KAAKE,SAAS,GAAGP,YAAY,GAAGU,CAAU,CAACP,KAAK,CAAC,CAACQ,QAAQ,CAACN,YAAY,GAAG,CAAC,CAAC,CAAA;AACjG,CAAA;AAEA,aAAeO,MAAM,CAAC,UAASC,MAAM,EAAE;EACrC,IAAI;IAAEb,YAAY;IAAEG,KAAK;AAAED,IAAAA,YAAAA;AAAa,GAAC,GAAGY,sCAAsC,CAACD,MAAM,CAAC,CAAA;AAE1F,EAAA,OAAOd,IAAI,CAACC,YAAY,EAAEG,KAAK,EAAED,YAAY,CAAC,CAAA;AAChD,CAAC,CAAC;;;;"}