{"version":3,"file":"has-previous.js","sources":["../../src/helpers/has-previous.js"],"sourcesContent":["import { helper } from '@ember/component/helper';\nimport { isPresent } from '@ember/utils';\nimport { previous } from './previous';\nimport isEqual from '../utils/is-equal';\nimport getValueArrayAndUseDeepEqualFromParams from '../-private/get-value-array-and-use-deep-equal-from-params';\nimport asArray from '../utils/as-array';\n\nexport function hasPrevious(currentValue, maybeArray, useDeepEqual = false) {\n  let array = asArray(maybeArray);\n  let previousValue = previous(currentValue, array, useDeepEqual);\n  let isNotSameValue = !isEqual(previousValue, currentValue, useDeepEqual);\n\n  return isNotSameValue && isPresent(previousValue);\n}\n\nexport default helper(function(params) {\n  let { currentValue, array, useDeepEqual } = getValueArrayAndUseDeepEqualFromParams(params);\n\n  return hasPrevious(currentValue, array, useDeepEqual);\n});\n"],"names":["hasPrevious","currentValue","maybeArray","useDeepEqual","array","asArray","previousValue","previous","isNotSameValue","isEqual","isPresent","helper","params","getValueArrayAndUseDeepEqualFromParams"],"mappings":";;;;;;;AAOO,SAASA,WAAWA,CAACC,YAAY,EAAEC,UAAU,EAAEC,YAAY,GAAG,KAAK,EAAE;AAC1E,EAAA,IAAIC,KAAK,GAAGC,OAAO,CAACH,UAAU,CAAC,CAAA;EAC/B,IAAII,aAAa,GAAGC,QAAQ,CAACN,YAAY,EAAEG,KAAK,EAAED,YAAY,CAAC,CAAA;EAC/D,IAAIK,cAAc,GAAG,CAACC,OAAO,CAACH,aAAa,EAAEL,YAAY,EAAEE,YAAY,CAAC,CAAA;AAExE,EAAA,OAAOK,cAAc,IAAIE,SAAS,CAACJ,aAAa,CAAC,CAAA;AACnD,CAAA;AAEA,oBAAeK,MAAM,CAAC,UAASC,MAAM,EAAE;EACrC,IAAI;IAAEX,YAAY;IAAEG,KAAK;AAAED,IAAAA,YAAAA;AAAa,GAAC,GAAGU,sCAAsC,CAACD,MAAM,CAAC,CAAA;AAE1F,EAAA,OAAOZ,WAAW,CAACC,YAAY,EAAEG,KAAK,EAAED,YAAY,CAAC,CAAA;AACvD,CAAC,CAAC;;;;"}