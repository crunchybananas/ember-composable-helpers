{"version":3,"file":"filter-by.js","sources":["../../src/helpers/filter-by.js"],"sourcesContent":["import { helper } from '@ember/component/helper';\nimport { isArray as isEmberArray } from '@ember/array';\nimport { isEmpty, isPresent } from '@ember/utils';\nimport { get } from '@ember/object';\nimport isEqual from '../utils/is-equal';\nimport asArray from '../utils/as-array';\n\nexport function filterBy([byPath, value, array]) {\n\n  if (!isEmberArray(array) && isEmberArray(value)) {\n    array = value;\n    value = undefined;\n  }\n\n  array = asArray(array);\n\n  if (isEmpty(byPath) || isEmpty(array)) {\n    return [];\n  }\n\n  let filterFn;\n\n  if (isPresent(value)) {\n    if (typeof value === 'function') {\n      filterFn = (item) => value(get(item, byPath));\n    } else {\n      filterFn = (item) => isEqual(get(item, byPath), value);\n    }\n  } else {\n    filterFn = (item) => !!get(item, byPath);\n  }\n\n  return array.filter(filterFn);\n}\n\nexport default helper(filterBy);\n"],"names":["filterBy","byPath","value","array","isEmberArray","undefined","asArray","isEmpty","filterFn","isPresent","item","get","isEqual","filter","helper"],"mappings":";;;;;;;AAOO,SAASA,QAAQA,CAAC,CAACC,MAAM,EAAEC,KAAK,EAAEC,KAAK,CAAC,EAAE;EAE/C,IAAI,CAACC,OAAY,CAACD,KAAK,CAAC,IAAIC,OAAY,CAACF,KAAK,CAAC,EAAE;AAC/CC,IAAAA,KAAK,GAAGD,KAAK,CAAA;AACbA,IAAAA,KAAK,GAAGG,SAAS,CAAA;AACnB,GAAA;AAEAF,EAAAA,KAAK,GAAGG,OAAO,CAACH,KAAK,CAAC,CAAA;EAEtB,IAAII,OAAO,CAACN,MAAM,CAAC,IAAIM,OAAO,CAACJ,KAAK,CAAC,EAAE;AACrC,IAAA,OAAO,EAAE,CAAA;AACX,GAAA;AAEA,EAAA,IAAIK,QAAQ,CAAA;AAEZ,EAAA,IAAIC,SAAS,CAACP,KAAK,CAAC,EAAE;AACpB,IAAA,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE;MAC/BM,QAAQ,GAAIE,IAAI,IAAKR,KAAK,CAACS,GAAG,CAACD,IAAI,EAAET,MAAM,CAAC,CAAC,CAAA;AAC/C,KAAC,MAAM;AACLO,MAAAA,QAAQ,GAAIE,IAAI,IAAKE,OAAO,CAACD,GAAG,CAACD,IAAI,EAAET,MAAM,CAAC,EAAEC,KAAK,CAAC,CAAA;AACxD,KAAA;AACF,GAAC,MAAM;IACLM,QAAQ,GAAIE,IAAI,IAAK,CAAC,CAACC,GAAG,CAACD,IAAI,EAAET,MAAM,CAAC,CAAA;AAC1C,GAAA;AAEA,EAAA,OAAOE,KAAK,CAACU,MAAM,CAACL,QAAQ,CAAC,CAAA;AAC/B,CAAA;AAEA,iBAAeM,MAAM,CAACd,QAAQ,CAAC;;;;"}